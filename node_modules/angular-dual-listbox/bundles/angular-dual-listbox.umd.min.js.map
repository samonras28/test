{"version":3,"sources":["ng://angular-dual-listbox/lib/basic-list.ts","ng://angular-dual-listbox/lib/dual-list.component.ts","ng://angular-dual-listbox/lib/angular-dual-listbox.module.ts"],"names":["BasicList","name","this","_name","last","picker","dragStart","dragOver","pick","list","sift","Object","defineProperty","prototype","nextId","DualListComponent","differs","id","key","display","height","filter","format","DEFAULT_FORMAT","sort","disabled","destinationChange","EventEmitter","sorter","a","b","available","AVAILABLE_LIST_NAME","confirmed","CONFIRMED_LIST_NAME","ngOnChanges","changeRecord","currentValue","clearFilter","compare","undefined","direction","LTR","add","remove","all","none","draggable","updatedSource","updatedDestination","ngDoCheck","source","buildAvailable","onFilter","destination","buildConfirmed","_this","sourceChanges","sourceDiffer","diff","forEachRemovedItem","r","idx","findItemIndex","item","splice","forEachAddedItem","push","_id","makeId","makeName","moved","destChanges","destinationDiffer","isItemSelected","selectItem","moveItem","trueUp","length","find","create","dragEnd","drag","event","dataTransfer","setData","allowDrop","types","preventDefault","dragLeave","drop","changed","pos","conf","i","len","mv","this_1","d","o","emit","e","indexOf","makeUnavailable","target","trueup","this_2","src","trg","setTimeout","is","shiftClick","index","shiftKey","pk","selectAll","slice","selectNone","isAllSelected","isAnySelected","unpick","filtered","toString","call","toLocaleLowerCase","locale","JSON","stringify","RangeError","separator","fallback","itm","str","parts","split","s","nums","substring","parseInt","RTL","Component","args","selector","template","IterableDiffers","Input","Output","AngularDualListBoxModule","NgModule","imports","CommonModule","FormsModule","declarations","exports"],"mappings":"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","sourcesContent":["export class BasicList {\n\t/** Name of the list */\n\tprivate _name: string;\n\t/** Last element touched */\n\tlast: any;\n\t/** text filter */\n\tpicker: string;\n\n\tdragStart: boolean;\n\tdragOver: boolean;\n\n\tpick: Array<any>;\n\tlist: Array<any>;\n\tsift: Array<any>;\n\n\tconstructor(name: string) {\n\t\tthis._name = name;\n\t\tthis.last = null;\n\t\tthis.picker = '';\n\t\tthis.dragStart = false;\n\t\tthis.dragOver = false;\n\n\t\t// Arrays will contain objects of { _id, _name }.\n\t\tthis.pick = [];\n\t\tthis.list = [];\n\t\tthis.sift = [];\n\t}\n\n\tget name(): string {\n\t\treturn this._name;\n\t}\n}\n","import { Component, DoCheck, EventEmitter, Input, IterableDiffers, OnChanges,\n\tOutput, SimpleChange } from '@angular/core';\n\nimport { BasicList } from './basic-list';\n\nexport type compareFunction = (a: any, b: any) => number;\n\nvar nextId = 0;\n\n@Component({\n\tselector: 'dual-list',\n\ttemplateUrl: './dual-list.component.html',\n\tstyleUrls: [ './dual-list.component.css' ]\n})\n\nexport class DualListComponent implements DoCheck, OnChanges {\n\tstatic AVAILABLE_LIST_NAME = 'available';\n\tstatic CONFIRMED_LIST_NAME = 'confirmed';\n\n\tstatic LTR = 'left-to-right';\n\tstatic RTL = 'right-to-left';\n\n\tstatic DEFAULT_FORMAT = {\n\t\tadd: 'Add',\n\t\tremove: 'Remove',\n\t\tall: 'All',\n\t\tnone: 'None',\n\t\tdirection: DualListComponent.LTR,\n\t\tdraggable: true,\n\t\tlocale: undefined\n\t};\n\n\t@Input() id = `dual-list-${nextId++}`;\n\t@Input() key = '_id';\n\t@Input() display: any = '_name';\n\t@Input() height = '100px';\n\t@Input() filter = false;\n\t@Input() format = DualListComponent.DEFAULT_FORMAT;\n\t@Input() sort = false;\n\t@Input() compare: compareFunction;\n\t@Input() disabled = false;\n\t@Input() source: Array<any>;\n\t@Input() destination: Array<any>;\n\t@Output() destinationChange = new EventEmitter();\n\n\tavailable: BasicList;\n\tconfirmed: BasicList;\n\n\tsourceDiffer: any;\n\tdestinationDiffer: any;\n\n\tprivate sorter = (a: any, b: any) => { return (a._name < b._name) ? -1 : ((a._name > b._name) ? 1 : 0); };\n\n\tconstructor(private differs: IterableDiffers) {\n\t\tthis.available = new BasicList(DualListComponent.AVAILABLE_LIST_NAME);\n\t\tthis.confirmed = new BasicList(DualListComponent.CONFIRMED_LIST_NAME);\n\t}\n\n\tngOnChanges(changeRecord: {[key: string]: SimpleChange}) {\n\t\tif (changeRecord['filter']) {\n\t\t\tif (changeRecord['filter'].currentValue === false) {\n\t\t\t\tthis.clearFilter(this.available);\n\t\t\t\tthis.clearFilter(this.confirmed);\n\t\t\t}\n\t\t}\n\n\t\tif (changeRecord['sort']) {\n\t\t\tif (changeRecord['sort'].currentValue === true && this.compare === undefined) {\n\t\t\t\tthis.compare = this.sorter;\n\t\t\t} else if (changeRecord['sort'].currentValue === false) {\n\t\t\t\tthis.compare = undefined;\n\t\t\t}\n\t\t}\n\n\t\tif (changeRecord['format']) {\n\t\t\tthis.format = changeRecord['format'].currentValue;\n\n\t\t\tif (typeof(this.format.direction) === 'undefined') {\n\t\t\t\tthis.format.direction = DualListComponent.LTR;\n\t\t\t}\n\n\t\t\tif (typeof(this.format.add) === 'undefined') {\n\t\t\t\tthis.format.add = DualListComponent.DEFAULT_FORMAT.add;\n\t\t\t}\n\n\t\t\tif (typeof(this.format.remove) === 'undefined') {\n\t\t\t\tthis.format.remove = DualListComponent.DEFAULT_FORMAT.remove;\n\t\t\t}\n\n\t\t\tif (typeof(this.format.all) === 'undefined') {\n\t\t\t\tthis.format.all = DualListComponent.DEFAULT_FORMAT.all;\n\t\t\t}\n\n\t\t\tif (typeof(this.format.none) === 'undefined') {\n\t\t\t\tthis.format.none = DualListComponent.DEFAULT_FORMAT.none;\n\t\t\t}\n\n\t\t\tif (typeof(this.format.draggable) === 'undefined') {\n\t\t\t\tthis.format.draggable = DualListComponent.DEFAULT_FORMAT.draggable;\n\t\t\t}\n\t\t}\n\n\t\tif (changeRecord['source']) {\n\t\t\tthis.available = new BasicList(DualListComponent.AVAILABLE_LIST_NAME);\n\t\t\tthis.updatedSource();\n\t\t\tthis.updatedDestination();\n\t\t}\n\n\t\tif (changeRecord['destination']) {\n\t\t\tthis.confirmed = new BasicList(DualListComponent.CONFIRMED_LIST_NAME);\n\t\t\tthis.updatedDestination();\n\t\t\tthis.updatedSource();\n\t\t}\n\t}\n\n\tngDoCheck() {\n\t\tif (this.source && this.buildAvailable(this.source)) {\n\t\t\tthis.onFilter(this.available);\n\t\t}\n\t\tif (this.destination && this.buildConfirmed(this.destination)) {\n\t\t\tthis.onFilter(this.confirmed);\n\t\t}\n\t}\n\n\tbuildAvailable(source: Array<any>): boolean {\n\t\tconst sourceChanges = this.sourceDiffer.diff(source);\n\t\tif (sourceChanges) {\n\t\t\tsourceChanges.forEachRemovedItem((r: any) => {\n\t\t\t\tconst idx = this.findItemIndex(this.available.list, r.item, this.key);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tthis.available.list.splice(idx, 1);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsourceChanges.forEachAddedItem((r: any) => {\n\t\t\t\t// Do not add duplicates even if source has duplicates.\n\t\t\t\tif (this.findItemIndex(this.available.list, r.item, this.key) === -1) {\n\t\t\t\t\tthis.available.list.push( { _id: this.makeId(r.item), _name: this.makeName(r.item) });\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (this.compare !== undefined) {\n\t\t\t\tthis.available.list.sort(this.compare);\n\t\t\t}\n\t\t\tthis.available.sift = this.available.list;\n\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tbuildConfirmed(destination: Array<any>): boolean {\n\t\tlet moved = false;\n\t\tconst destChanges = this.destinationDiffer.diff(destination);\n\t\tif (destChanges) {\n\t\t\tdestChanges.forEachRemovedItem((r: any) => {\n\t\t\t\tconst idx = this.findItemIndex(this.confirmed.list, r.item, this.key);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tif (!this.isItemSelected(this.confirmed.pick, this.confirmed.list[idx])) {\n\t\t\t\t\t\tthis.selectItem(this.confirmed.pick, this.confirmed.list[idx]);\n\t\t\t\t\t}\n\t\t\t\t\tthis.moveItem(this.confirmed, this.available, this.confirmed.list[idx], false);\n\t\t\t\t\tmoved = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tdestChanges.forEachAddedItem((r: any) => {\n\t\t\t\tconst idx = this.findItemIndex(this.available.list, r.item, this.key);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tif (!this.isItemSelected(this.available.pick, this.available.list[idx])) {\n\t\t\t\t\t\tthis.selectItem(this.available.pick, this.available.list[idx]);\n\t\t\t\t\t}\n\t\t\t\t\tthis.moveItem(this.available, this.confirmed, this.available.list[idx], false);\n\t\t\t\t\tmoved = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (this.compare !== undefined) {\n\t\t\t\tthis.confirmed.list.sort(this.compare);\n\t\t\t}\n\t\t\tthis.confirmed.sift = this.confirmed.list;\n\n\t\t\tif (moved) {\n\t\t\t\tthis.trueUp();\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tupdatedSource() {\n\t\tthis.available.list.length = 0;\n\t\tthis.available.pick.length = 0;\n\n\t\tif (this.source !== undefined) {\n\t\t\tthis.sourceDiffer = this.differs.find(this.source).create(null);\n\t\t}\n\t}\n\n\tupdatedDestination() {\n\t\tif (this.destination !== undefined) {\n\t\t\tthis.destinationDiffer = this.differs.find(this.destination).create(null);\n\t\t}\n\t}\n\n\tdirection() {\n\t\treturn this.format.direction === DualListComponent.LTR;\n\t}\n\n\tdragEnd(list: BasicList = null): boolean {\n\t\tif (list) {\n\t\t\tlist.dragStart = false;\n\t\t} else {\n\t\t\tthis.available.dragStart = false;\n\t\t\tthis.confirmed.dragStart = false;\n\t\t}\n\t\treturn false;\n\t}\n\n\tdrag(event: DragEvent, item: any, list: BasicList) {\n\t\tif (!this.isItemSelected(list.pick, item)) {\n\t\t\tthis.selectItem(list.pick, item);\n\t\t}\n\t\tlist.dragStart = true;\n\n\t\t// Set a custom type to be this dual-list's id.\n\t\tevent.dataTransfer.setData(this.id, item['_id']);\n\t}\n\n\tallowDrop(event: DragEvent, list: BasicList): boolean {\n\t\tif (event.dataTransfer.types.length && (event.dataTransfer.types[0] === this.id)) {\n\t\t\tevent.preventDefault();\n\t\t\tif (!list.dragStart) {\n\t\t\t\tlist.dragOver = true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tdragLeave() {\n\t\tthis.available.dragOver = false;\n\t\tthis.confirmed.dragOver = false;\n\t}\n\n\tdrop(event: DragEvent, list: BasicList) {\n\t\tif (event.dataTransfer.types.length && (event.dataTransfer.types[0] === this.id)) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.dragLeave();\n\t\t\tthis.dragEnd();\n\n\t\t\tif (list === this.available) {\n\t\t\t\tthis.moveItem(this.available, this.confirmed);\n\t\t\t} else {\n\t\t\t\tthis.moveItem(this.confirmed, this.available);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate trueUp() {\n\t\tlet changed = false;\n\n\t\t// Clear removed items.\n\t\tlet pos = this.destination.length;\n\t\twhile ((pos -= 1) >= 0) {\n\t\t\tconst mv = this.confirmed.list.filter( conf => {\n\t\t\t\tif (typeof this.destination[pos] === 'object') {\n\t\t\t\t\treturn conf._id === this.destination[pos][this.key];\n\t\t\t\t} else {\n\t\t\t\t\treturn conf._id === this.destination[pos];\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (mv.length === 0) {\n\t\t\t\t// Not found so remove.\n\t\t\t\tthis.destination.splice(pos, 1);\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\n\t\t// Push added items.\n\t\tfor (let i = 0, len = this.confirmed.list.length; i < len; i += 1) {\n\t\t\tlet mv = this.destination.filter( (d: any) => {\n\t\t\t\tif (typeof d === 'object') {\n\t\t\t\t\treturn (d[this.key] === this.confirmed.list[i]._id);\n\t\t\t\t} else {\n\t\t\t\t\treturn (d === this.confirmed.list[i]._id);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (mv.length === 0) {\n\t\t\t\t// Not found so add.\n\t\t\t\tmv = this.source.filter( (o: any) => {\n\t\t\t\t\tif (typeof o === 'object') {\n\t\t\t\t\t\treturn (o[this.key] === this.confirmed.list[i]._id);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (o === this.confirmed.list[i]._id);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (mv.length > 0) {\n\t\t\t\t\tthis.destination.push(mv[0]);\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (changed) {\n\t\t\tthis.destinationChange.emit(this.destination);\n\t\t}\n\t}\n\n\tfindItemIndex(list: Array<any>, item: any, key: any = '_id') {\n\t\tlet idx = -1;\n\n\t\tfunction matchObject(e: any) {\n\t\t\tif (e._id === item[key]) {\n\t\t\t\tidx = list.indexOf(e);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction match(e: any) {\n\t\t\tif (e._id === item) {\n\t\t\t\tidx = list.indexOf(e);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// Assumption is that the arrays do not have duplicates.\n\t\tif (typeof item === 'object') {\n\t\t\tlist.filter(matchObject);\n\t\t} else {\n\t\t\tlist.filter(match);\n\t\t}\n\n\t\treturn idx;\n\t}\n\n\tprivate makeUnavailable(source: BasicList, item: any) {\n\t\tconst idx = source.list.indexOf(item);\n\t\tif (idx !== -1) {\n\t\t\tsource.list.splice(idx, 1);\n\t\t}\n\t}\n\n\tmoveItem(source: BasicList, target: BasicList, item: any = null, trueup = true) {\n\t\tlet i = 0;\n\t\tlet len = source.pick.length;\n\n\t\tif (item) {\n\t\t\ti = source.list.indexOf(item);\n\t\t\tlen = i + 1;\n\t\t}\n\n\t\tfor (; i < len; i += 1) {\n\t\t\t// Is the pick still in list?\n\t\t\tlet mv: Array<any> = [];\n\t\t\tif (item) {\n\t\t\t\tconst idx = this.findItemIndex(source.pick, item);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tmv[0] = source.pick[idx];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmv = source.list.filter( src => {\n\t\t\t\t\treturn (src._id === source.pick[i]._id);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Should only ever be 1\n\t\t\tif (mv.length === 1) {\n\t\t\t\t// Add if not already in target.\n\t\t\t\tif (target.list.filter(trg => trg._id === mv[0]._id).length === 0) {\n\t\t\t\t\ttarget.list.push( mv[0] );\n\t\t\t\t}\n\n\t\t\t\tthis.makeUnavailable(source, mv[0]);\n\t\t\t}\n\t\t}\n\n\t\tif (this.compare !== undefined) {\n\t\t\ttarget.list.sort(this.compare);\n\t\t}\n\n\t\tsource.pick.length = 0;\n\n\t\t// Update destination\n\t\tif (trueup) {\n\t\t\tthis.trueUp();\n\t\t}\n\n\t\t// Delay ever-so-slightly to prevent race condition.\n\t\tsetTimeout( () => {\n\t\t\tthis.onFilter(source);\n\t\t\tthis.onFilter(target);\n\t\t}, 10);\n\t}\n\n\tisItemSelected(list: Array<any>, item: any): boolean {\n\t\tif (list.filter(e => Object.is(e, item)).length > 0) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tshiftClick(event: MouseEvent, index: number, source: BasicList, item: any) {\n\t\tif (event.shiftKey && source.last && !Object.is(item, source.last)) {\n\t\t\tconst idx = source.sift.indexOf(source.last);\n\t\t\tif (index > idx) {\n\t\t\t\tfor (let i = (idx + 1); i < index; i += 1) {\n\t\t\t\t\tthis.selectItem(source.pick, source.sift[i]);\n\t\t\t\t}\n\t\t\t} else if (idx !== -1) {\n\t\t\t\tfor (let i = (index + 1); i < idx; i += 1)  {\n\t\t\t\t\tthis.selectItem(source.pick, source.sift[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsource.last = item;\n\t}\n\n\tselectItem(list: Array<any>, item: any) {\n\t\tconst pk = list.filter( (e: any) => {\n\t\t\treturn Object.is(e, item);\n\t\t});\n\t\tif (pk.length > 0) {\n\t\t\t// Already in list, so deselect.\n\t\t\tfor (let i = 0, len = pk.length; i < len; i += 1) {\n\t\t\t\tconst idx = list.indexOf(pk[i]);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tlist.splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tlist.push(item);\n\t\t}\n\t}\n\n\tselectAll(source: BasicList) {\n\t\tsource.pick.length = 0;\n\t\tsource.pick = source.sift.slice(0);\n\t}\n\n\tselectNone(source: BasicList) {\n\t\tsource.pick.length = 0;\n\t}\n\n\tisAllSelected(source: BasicList): boolean {\n\t\tif (source.list.length === 0 || source.list.length === source.pick.length) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tisAnySelected(source: BasicList): boolean {\n\t\tif (source.pick.length > 0) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate unpick(source: BasicList) {\n\t\tfor (let i = source.pick.length - 1; i >= 0; i -= 1) {\n\t\t\tif (source.sift.indexOf(source.pick[i]) === -1) {\n\t\t\t\tsource.pick.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tclearFilter(source: BasicList) {\n\t\tif (source) {\n\t\t\tsource.picker = '';\n\t\t\tthis.onFilter(source);\n\t\t}\n\t}\n\n\tonFilter(source: BasicList) {\n\t\tif (source.picker.length > 0) {\n\t\t\ttry {\n\t\t\t\tconst filtered = source.list.filter( (item: any) => {\n\t\t\t\t\tif (Object.prototype.toString.call(item) === '[object Object]') {\n\t\t\t\t\t\tif (item._name !== undefined) {\n\t\t\t\t\t\t\t// @ts-ignore: remove when d.ts has locale as an argument.\n\t\t\t\t\t\t\treturn item._name.toLocaleLowerCase(this.format.locale).indexOf(source.picker.toLocaleLowerCase(this.format.locale)) !== -1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// @ts-ignore: remove when d.ts has locale as an argument.\n\t\t\t\t\t\t\treturn JSON.stringify(item).toLocaleLowerCase(this.format.locale).indexOf(source.picker.toLocaleLowerCase(this.format.locale)) !== -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// @ts-ignore: remove when d.ts has locale as an argument.\n\t\t\t\t\t\treturn item.toLocaleLowerCase(this.format.locale).indexOf(source.picker.toLocaleLowerCase(this.format.locale)) !== -1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tsource.sift = filtered;\n\t\t\t\tthis.unpick(source);\n\t\t\t} catch (e) {\n\t\t\t\tif (e instanceof RangeError) {\n\t\t\t\t\tthis.format.locale = undefined;\n\t\t\t\t}\n\t\t\t\tsource.sift = source.list;\n\t\t\t}\n\t\t} else {\n\t\t\tsource.sift = source.list;\n\t\t}\n\t}\n\n\tprivate makeId(item: any): string | number {\n\t\tif (typeof item === 'object') {\n\t\t\treturn item[this.key];\n\t\t} else {\n\t\t\treturn item;\n\t\t}\n\t}\n\n\t// Allow for complex names by passing an array of strings.\n\t// Example: [display]=\"[ '_type.substring(0,1)', '_name' ]\"\n\tprotected makeName(item: any, separator = '_'): string {\n\t\tconst display = this.display;\n\n\t\tfunction fallback(itm: any) {\n\t\t\tswitch (Object.prototype.toString.call(itm)) {\n\t\t\tcase '[object Number]':\n\t\t\t\treturn itm;\n\t\t\tcase '[object String]':\n\t\t\t\treturn itm;\n\t\t\tdefault:\n\t\t\t\tif (itm !== undefined) {\n\t\t\t\t\treturn itm[display];\n\t\t\t\t} else {\n\t\t\t\t\treturn 'undefined';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet str = '';\n\n\t\tif (this.display !== undefined) {\n\t\t\tswitch (Object.prototype.toString.call(this.display)) {\n\t\t\tcase '[object Function]':\n\t\t\t\tstr = this.display(item);\n\t\t\t\tbreak;\n\n\t\t\tcase '[object Array]':\n\t\t\t\tfor (let i = 0, len = this.display.length; i < len; i += 1) {\n\t\t\t\t\tif (str.length > 0) {\n\t\t\t\t\t\tstr = str + separator;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.display[i].indexOf('.') === -1) {\n\t\t\t\t\t\t// Simple, just add to string.\n\t\t\t\t\t\tstr = str + item[this.display[i]];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Complex, some action needs to be performed\n\t\t\t\t\t\tconst parts = this.display[i].split('.');\n\n\t\t\t\t\t\tconst s = item[parts[0]];\n\t\t\t\t\t\tif (s) {\n\t\t\t\t\t\t\t// Use brute force\n\t\t\t\t\t\t\tif (parts[1].indexOf('substring') !== -1) {\n\t\t\t\t\t\t\t\tconst nums = (parts[1].substring(parts[1].indexOf('(') + 1, parts[1].indexOf(')'))).split(',');\n\n\t\t\t\t\t\t\t\tswitch (nums.length) {\n\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\tstr = str + s.substring(parseInt(nums[0], 10));\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tstr = str + s.substring(parseInt(nums[0], 10), parseInt(nums[1], 10));\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tstr = str + s;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// method not approved, so just add s.\n\t\t\t\t\t\t\t\tstr = str + s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tstr = fallback(item);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tstr = fallback(item);\n\t\t}\n\n\t\treturn str;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { DualListComponent } from './dual-list.component';\n\n@NgModule({\n\timports:      [\n\t\tCommonModule,\n\t\tFormsModule\n\t],\n\tdeclarations: [ DualListComponent ],\n\texports:      [ DualListComponent ]\n})\nexport class AngularDualListBoxModule {}\n\n"]}