import { ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges, NgZone } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class ClickOutsideDirective implements OnInit, OnChanges, OnDestroy {
    private _el;
    private _ngZone;
    private platformId;
    clickOutsideEnabled: boolean;
    attachOutsideOnClick: boolean;
    delayClickOutsideInit: boolean;
    emitOnBlur: boolean;
    exclude: string;
    excludeBeforeClick: boolean;
    clickOutsideEvents: string;
    clickOutside: EventEmitter<Event>;
    private _nodesExcluded;
    private _events;
    constructor(_el: ElementRef, _ngZone: NgZone, platformId: Object);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private _init();
    private _initOnClickBody();
    private _excludeCheck();
    private _onClickBody(ev);
    /**
     * Resolves problem with outside click on iframe
     * @see https://github.com/arkon/ng-click-outside/issues/32
     */
    private _onWindowBlur(ev);
    private _emit(ev);
    private _shouldExclude(target);
    private _initClickOutsideListener();
    private _removeClickOutsideListener();
    private _initAttachOutsideOnClickListener();
    private _removeAttachOutsideOnClickListener();
    private _initWindowBlurListener();
    private _removeWindowBlurListener();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClickOutsideDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ClickOutsideDirective, "[clickOutside]", never, {
    "clickOutsideEnabled": "clickOutsideEnabled";
    "attachOutsideOnClick": "attachOutsideOnClick";
    "delayClickOutsideInit": "delayClickOutsideInit";
    "emitOnBlur": "emitOnBlur";
    "exclude": "exclude";
    "excludeBeforeClick": "excludeBeforeClick";
    "clickOutsideEvents": "clickOutsideEvents";
}, {
    "clickOutside": "clickOutside";
}, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<ClickOutsideDirective>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpY2stb3V0c2lkZS5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsiY2xpY2stb3V0c2lkZS5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBTaW1wbGVDaGFuZ2VzLCBOZ1pvbmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENsaWNrT3V0c2lkZURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgX2VsO1xuICAgIHByaXZhdGUgX25nWm9uZTtcbiAgICBwcml2YXRlIHBsYXRmb3JtSWQ7XG4gICAgY2xpY2tPdXRzaWRlRW5hYmxlZDogYm9vbGVhbjtcbiAgICBhdHRhY2hPdXRzaWRlT25DbGljazogYm9vbGVhbjtcbiAgICBkZWxheUNsaWNrT3V0c2lkZUluaXQ6IGJvb2xlYW47XG4gICAgZW1pdE9uQmx1cjogYm9vbGVhbjtcbiAgICBleGNsdWRlOiBzdHJpbmc7XG4gICAgZXhjbHVkZUJlZm9yZUNsaWNrOiBib29sZWFuO1xuICAgIGNsaWNrT3V0c2lkZUV2ZW50czogc3RyaW5nO1xuICAgIGNsaWNrT3V0c2lkZTogRXZlbnRFbWl0dGVyPEV2ZW50PjtcbiAgICBwcml2YXRlIF9ub2Rlc0V4Y2x1ZGVkO1xuICAgIHByaXZhdGUgX2V2ZW50cztcbiAgICBjb25zdHJ1Y3RvcihfZWw6IEVsZW1lbnRSZWYsIF9uZ1pvbmU6IE5nWm9uZSwgcGxhdGZvcm1JZDogT2JqZWN0KTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBfaW5pdCgpO1xuICAgIHByaXZhdGUgX2luaXRPbkNsaWNrQm9keSgpO1xuICAgIHByaXZhdGUgX2V4Y2x1ZGVDaGVjaygpO1xuICAgIHByaXZhdGUgX29uQ2xpY2tCb2R5KGV2KTtcbiAgICAvKipcbiAgICAgKiBSZXNvbHZlcyBwcm9ibGVtIHdpdGggb3V0c2lkZSBjbGljayBvbiBpZnJhbWVcbiAgICAgKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9hcmtvbi9uZy1jbGljay1vdXRzaWRlL2lzc3Vlcy8zMlxuICAgICAqL1xuICAgIHByaXZhdGUgX29uV2luZG93Qmx1cihldik7XG4gICAgcHJpdmF0ZSBfZW1pdChldik7XG4gICAgcHJpdmF0ZSBfc2hvdWxkRXhjbHVkZSh0YXJnZXQpO1xuICAgIHByaXZhdGUgX2luaXRDbGlja091dHNpZGVMaXN0ZW5lcigpO1xuICAgIHByaXZhdGUgX3JlbW92ZUNsaWNrT3V0c2lkZUxpc3RlbmVyKCk7XG4gICAgcHJpdmF0ZSBfaW5pdEF0dGFjaE91dHNpZGVPbkNsaWNrTGlzdGVuZXIoKTtcbiAgICBwcml2YXRlIF9yZW1vdmVBdHRhY2hPdXRzaWRlT25DbGlja0xpc3RlbmVyKCk7XG4gICAgcHJpdmF0ZSBfaW5pdFdpbmRvd0JsdXJMaXN0ZW5lcigpO1xuICAgIHByaXZhdGUgX3JlbW92ZVdpbmRvd0JsdXJMaXN0ZW5lcigpO1xufVxuIl19